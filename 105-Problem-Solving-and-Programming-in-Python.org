* PROBLEM SOLVING AND PROGRAMMING IN PYTHON
:properties:
:author: P.Mirunalini and H.Shahulh Ameadh
:date: 16 March 2021
:end:

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |
		
** Course Objectives
   - To explore problem solving using computational thinking.
   - To learn the fundamentals of python programming.
   - To compose programs in Python using conditions, iterationa and decompose a problem into functions
   - To construct programs in Python sequcenced data type.
   - To develop python programs using advanced constructs like dictionaries and files. 

{{{unit}}}
| Unit I | Algorithmic Problem Solving  | 9 |
Computational Thinking; Logical and Algorithmic Thinking: Logical Thinking -- Algorithmic Thinking;
Problem Solving and Decomposition: Defining the Problem -- Devising the Solution -- Decomposition;
Effective building blocks : Basic Algorithmic Constructs (pseudo code, flow chart, programming
language) -- Program State; 

| Unit II | Data, Expression, Statement, Conditional | 9 |
Data and types: int, float, boolean, string, list; variables,
expressions, statements, simultaneous assignment, precedence of
operators; comments; in-built modules and functions; Conditional:
boolean values and operators, conditional (if), alternative (if-else),
case analysis (if-elif-else).

| Unit III | Iteration, Function, Strings | 9 |
Iteration: while, for, break, continue, pass; Functions: function
definition, function call, flow of execution, parameters and
arguments, return values, local and global scope, recursion; Strings:
string slices, immutability, string functions and methods, string
module.

| Unit IV | Lists, Tuples | 9 |
Lists: list operations, list slices, list methods, list loop,
mutability, aliasing, cloning lists, list parameters, nested lists,
list comprehension; Tuples: tuple assignment, tuple as return value,
tuple operations.

| Unit V | Dictionaries, Files | 9 |
Dictionaries: operations and methods, looping and dictionaries,
reverse lookup, dictionaries and lists; Files: Text files, reading and
writing files, format operator, file names and paths; command line
arguments.

\hfill *Total Hours:45*

** Course Outcomes
After the completion of this course, students will be able to:
- Logically solve programming problems and write solutions in
  pseudo code (K3).
- Develop simple Python programs using basic constructs (K3).
- Construct programs using  conditions and iterations and make use of functions to decompose a problem. (K3)
- Build programs using strings, lists and tuples (K3).
- Utilize high level constructs like dictionaries and files in python programs(K3).

** Text Books
   1. Allen B. Downey, ``Think Python: How to Think Like a Computer
      Scientist'', 2nd edition, Updated for Python 3, Shroff/O'Reilly
      Publishers, 2016 (http://greenteapress.com/wp/think-python/)
   

** References
1. 

1. John V Guttag, ``Introduction to Computation and Programming Using
   Python'', Revised and expanded Edition, MIT Press, 2013
2. Robert Sedgewick, Kevin Wayne, Robert Dondero, ``Introduction to
   Programming in Python: An Inter-disciplinary Approach'', Pearson
   India Education Services Pvt. Ltd., 2016.
3. Timothy A. Budd, ``Exploring Python'', Mc-Graw Hill Education
   (India) Private Ltd., 2015.
4. Kenneth A. Lambert, ``Fundamentals of Python: First Programs'',
   CENGAGE Learning, 2012.
5. Charles Dierbach, ``Introduction to Computer Science using Python:
   A Computational Problem-Solving Focus'', Wiley India Edition, 2013.
6. Paul Gries, Jennifer Campbell and Jason Montojo, ``Practical
   Programming: An Introduction to Computer Science using Python 3'',
   Second edition, Pragmatic Programmers, LLC, 2013.

