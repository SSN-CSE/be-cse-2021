* <<<PE105>>> LOGIC PROGRAMMING
:properties:
:author: Dr. D. Thenmozhi and Dr. K. Lekshmi
:end:

#+startup: showall


** CO PO MAPPING :noexport:
#+NAME: co-po-mapping 

|                | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
| CO1            |   3 |   3 |   1 |   0 |   0 |   0 |   0 |   0 |   0 |    1 |    0 |    2 |    2 |    0 |    0 |
| CO2            |   2 |   3 |   1 |   1 |   0 |   0 |   0 |   0 |   0 |    1 |    0 |    2 |    3 |    0 |    0 |
| CO3            |   2 |   3 |   3 |   1 |   0 |   0 |   0 |   1 |   1 |    2 |    0 |    0 |    3 |    2 |    1 |
| CO4            |   2 |   3 |   3 |   1 |   0 |   0 |   0 |   1 |   1 |    2 |    0 |    0 |    3 |    2 |    1 |
| CO5            |   2 |   3 |   3 |   1 |   0 |   0 |   0 |   1 |   1 |    2 |    1 |    0 |    3 |    2 |    1 |
| Score          |  11 |  15 |  11 |   4 |   0 |   0 |   0 |   3 |   3 |    8 |    1 |    4 |   14 |    6 |    3 |

#+begin_comment
| Course Mapping |   3 |   3 |   3 |   1 |   0 |   0 |   0 |   1 |   1 |    2 |    1 |    1 |    3 |    2 |    1 |
#+end_comment


{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the foundations of Logic programming
- To learn programming in PROLOG
- To implement informed and uninformed search algorithms in PROLOG
- To implement Expert system shell in PROLOG.

{{{unit}}}
|UNIT I|INTRODUCTION TO LOGIC|10|
Foundations of Propositional Logic: Syntax and semantics -- Semantic
entailment; Normal Forms; Resolution in PL; Horn Logic; Foundations of
First Order Logic: Syntax and semantics; Normal Forms; Undecidability
of Predicate Logic; Resolution in FOL: Unification; Refinements of
resolution: P-resolution -- N-resolution -- Linear resolution -- Unit
resolution -- SLD resolution.

#+begin_comment

- 1. Removed LUSH resolution
- 2. Number of lecture hours changed from 9 to 10

#+end_comment

{{{unit}}}
|UNIT II|INTRODUCTION TO LOGIC PROGRAMMING|8|
Foundations: Answer generation; Horn Clause Programs: Semantics of
logic program -- Procedural semantics -- Model-theoretic semantics;
Evaluation Strategies: Swapping lemma -- PROLOG's evaluation strategy
-- DFS -- BFS.

#+begin_comment
- 1. Number of lecture hours changed from 9 to 8
#+end_comment

{{{unit}}}
|UNIT III|PROGRAMMING IN PROLOG|9|
Syntax & Semantics of PROLOG -- Programming with relations -- Facts --
Questions -- Variables -- Conjunctions of goals -- Backtracking --
Rules -- Structures -- Recursive programs -- Lists -- Operators -- Arithmetic -- 
Controlling execution -- The cut -- Input output -- Exception handling.

#+begin_comment
- 1. Operators and Arithmetic are moved from Unit IV to Unit III
#+end_comment

{{{unit}}}
|UNIT IV|PROLOG AND ARTIFICIAL INTELLIGENCE|9|
Data structures -- Eight Queens Problem -- Simulation of Automata; 
Operations on Data Structures: Representing and sorting lists -- Representing sets by binary trees --
Insertion & deletion in binary dictionary -- Displaying trees -- Graphs;  
Problem Solving Strategies in AI: DFS -- BFS -- A* Search; Problem Reduction &
AND/OR Graph: Basic AND/OR search procedure; Game Playing: The minimax principle -- 
The alpha-beta algorithm.


#+begin_comment
- 1. Added simulation of automata
- 2. Removed advanced tree representation
- 3. Removed best-first search in problem solving strategies
- 4. Removed best-first and-or search in problem reduction
- 5. Removed minimax-based programs in game playing

#+end_comment

{{{unit}}}
|UNIT V|PROLOG AND EXPERT SYSTEMS|9|
Foundations: Introduction to expert systems -- Features of expert
systems -- Functions of an expert system -- Structure of an expert
system; If-then rules for representing knowledge; Developing a Simple
Shell: Implementation -- Dealing with uncertainty;


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Apply propositional logic and predicate logic for knowledge representation (K3)
- Apply different types of semantics for logic programming (K3)
- Develop programs in PROLOG (K3)
- Solve AI problems using search algorithms in PROLOG (K3)
- Develop a simple Expert system shell in PROLOG (K3).

#+begin_comment
- 1. CO1 and CO2 changed to K3 level
#+end_comment

** TEXTBOOKS:
1. Uwe Schoning, ``Logic for Computer Scientists'', Birkhauser, 1999
   (Units I, II).
2. Ivan Bratko, ``PROLOG: Programming for Artificial Intelligence'',
   4th Edition, Pearson, 2011 (Units III, IV, V).
   
** REFERENCES:
1. Kees Doets, ``From Logic to Logic Programming'', MIT Press 1994.
2. Patrick Blackburn, Johan Bos, Kristina Streignitz, ``Learn PROLOG
   Now'', College Publications, 2006.
3. Dennis Merritt, ``Building Expert Systems in PROLOG'', Amzi!
   Inc. 2000
4. Helder Coelho, Jose C Cotta, ``PROLOG by Example: How to Learn,
   Teach and Use It'', Springer--Verlag, 2011.
5. W F Clocksin, C S Mellish, ``Programming in PROLOG'',
   Springer-Verlag, 2016.
