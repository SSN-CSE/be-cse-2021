* <<<504>>> SOFTWARE ENGINEERING
:properties:
:author: Dr. A. Chamundeswari and Ms. S. Angel Deborah
:date: 
:end:


#+startup: showall

** CO PO MAPPING :noexport:
#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K4 |   2 |   2 |   1 |   0 |   1 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    3 |    3 |    1 |
| CO2            | K3 |   2 |   2 |   3 |   1 |   1 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    3 |    1 |
| CO3            | K3 |   2 |   3 |   3 |   0 |   1 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    3 |    1 |
| CO4            | K2 |   2 |   1 |   1 |   1 |   1 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    3 |    1 |
| CO5            | K3 |   2 |   2 |   1 |   1 |   1 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    3 |    1 |
| CO6            | K3 |   2 |   3 |   3 |   3 |   1 |   2 |   1 |   2 |   3 |    3 |    1 |    3 |    3 |    3 |    1 |
| Score          |    |  14 |  11 |   9 |   0 |   0 |   5 |   2 |   5 |   5 |    5 |    7 |    5 |    9 |   14 |    6 |
| Course Mapping |    |   3 |   3 |   2 |   0 |   0 |   1 |   0 |   1 |   1 |    1 |    2 |    1 |    2 |    3 |    2 |

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- To understand the phases in a software project, estimate cost and effort.
- To understand fundamental concepts of requirements engineering and Analysis Modeling.
- To understand the various software design methodologies
- To learn various testing techniques and maintenance measures.
- To understand agile development and Devops

{{{unit}}}
| UNIT I | SOFTWARE PROCESS MODELS AND PLANNING | 9 |

Introduction to Software Engineering; Principles and Practices; The Software Development Life Cycle : Pre-development phases of the SDLC -- Development specific phases of the SDLC -- Post-development phases of the SDLC; Methodologies Paradigm and Practices : Process methodologies -- Development paradigms -- Development practices; Project Planning Process; Software Project Estimation: Decomposition techniques -- Empirical estimation models -- The make/buy decision -- Project scheduling; Risk Management.


{{{unit}}}
| UNIT II | REQUIREMENTS ANALYSIS AND SPECIFICATION | 9 |

Software Requirements: Functional and non-functional -- Security requirements -- User requirements -- System requirements -- Software requirements document; Requirement Engineering Process: Feasibility studies -- Requirements elicitation and analysis -- Requirements validation -- Requirements Management; Classical Analysis: Structured system analysis; Requirement modelling tools.


{{{unit}}}
| UNIT III | SOFTWARE DESIGN | 9 |
Design Concepts: Design process -- Design concepts -- Modularity, Coupling and cohesion -- Design model -- Modeling principles; Structured Design; Architectural Design: Architectural styles; Architecture for Network based Applications â€“ Decentralized Architectures. 
 

{{{unit}}}
| UNIT IV | SOFTWARE TESTING | 9 |
Software Testing Fundamentals; Internal and External Views of Testing: White box testing -- Basis path testing -- Control structure testing-- Black box testing -- Unit testing -- Integration testing -- Regression testing -- Validation testing -- System testing -- Security testing ;Testing Tool; Debugging; Software Implementation: Coding Practices and Principles; Maintenance: Types.



{{{unit}}}
| UNIT V | AGILE AND DEVOPS | 9 |
Agile Teams : Team and Scrum --  Branches -- Pull Requests --  Reviews -- Integration -- Agile Iterations -- Reporting and fixing bugs; Dev/Ops: From Development to Deployment -- Three-Tier -- Responsiveness, Service Level Objectives, and Apdex -- Releases and Feature Flags -- Monitoring and Finding Bottlenecks --Improving Rendering and Database Performance With Caching; Security: Defending customer data in application.



\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Choose an appropriate process model and estimate project cost and effort required(K4)
- Perform requirements analysis and modeling (K3)
- Apply systematic procedure for software design (K3)
- Compare and contrast the various testing and maintenance activities (K2)
- MAke use of agile development and Devops (K3)
- Build a system in teams and apply best practices and principles in software engineering with clear documentation of approaches (K3)

** TEXT BOOKS

1. Roger S Pressman, Bruce R.Maxin ``Software Engineering -- A Practitioner's Approach'', McGraw-Hill International Edition, Eighth Edition, 2015.
2. Armando Fox and David Patterson , Engineering Software as a    Service: An Agile Approach Using Cloud Computing Second Edition, 2021.
=======

** REFERENCES
1. Ian Sommerville, ``Software Engineering'', Pearson Education Asia,Tenth Edition, 2015.
2. Brian Albee, Hands-On SoftwareEngineering with Python,  Packt Publishing, 2018.
3. Kelkar S A,``Software Engineering'', Prentice Hall of India, 2007.
4. Stephen R Schach, ``Software Engineering'', Tata McGraw-Hill Publishing Company Limited,2007.
