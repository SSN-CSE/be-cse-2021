* <<<504>>> SOFTWARE ENGINEERING
:properties:
:author: Dr. A. Chamundeswari and Ms. S. Angel Deborah
:date: 
:end:


#+startup: showall

** CO PO MAPPING :noexport:
#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K2 |   2 |   3 |   2 |   3 |   3 |   0 |   2 |   1 |   0 |    3 |    0 |    2 |    3 |    2 |    1 |
| CO2            | K3 |   2 |   3 |   2 |   3 |   3 |   0 |   2 |   1 |   0 |    3 |    0 |    2 |    3 |    2 |    1 |
| CO3            | K3 |   2 |   3 |   2 |   3 |   3 |   0 |   2 |   1 |   0 |    3 |    0 |    2 |    3 |    2 |    1 |
| CO4            | K2 |   2 |   3 |   3 |   3 |   3 |   0 |   2 |   1 |   0 |    3 |    0 |    2 |    3 |    1 |    1 |
| CO5            | K3 |   2 |   3 |   3 |   3 |   3 |   0 |   2 |   1 |   0 |    3 |    0 |    2 |    3 |    1 |    1 |
| Score          |    |  13 |  10 |   8 |   0 |   5 |   5 |   0 |   5 |   0 |    0 |    0 |    0 |    8 |   13 |    5 |
| Course Mapping |    |   3 |   2 |   2 |   0 |   1 |   1 |   0 |   1 |   0 |    0 |    0 |    0 |    2 |    3 |    1 |


{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** COURSE OBJECTIVES
- Understand the phases in a software project mangement
- Deploy a simple software as a service application using architecture framework 
- Build an application using MVC and mobile framework
- Analyze the software requirements and testing of software projects
- Understand the agile and Devops environment

{{{unit}}}
| UNIT I | INTRODUCTION | 9 |
Introduction to Software as a Service, Agile Development, and Cloud Computing : Introduction  -- Software Development Processes  Plan-and-Document  -- Software Development Processes The Agile Manifesto  --  Software Quality Assurance Testing -- Productivity  Conciseness, Synthesis, Reuse, and Tools --SaaS and Service Oriented Architecture -- Deploying SaaS  Cloud Computing -- Deploying SaaS  Browsers and Mobile -- Beautiful vs. Legacy Code; 


#+begin_comment
Text book 1 , chapter 1
#+end_comment

{{{unit}}}
| UNIT II | SERVICE AND ARCHITECTURE | 9 |
Software as a Service  Frameworks and Languages : How to Learn a New Language -- Prelude  Learning to Learn Languages and Frameworks -- Pair Programming -- Introducing Ruby, an Object-Oriented Language -- Ruby Idioms  Poetry Mode, Blocks, Duck Typing -- CHIPS Ruby Intro -- Gems and Bundler  Library Management in Ruby;  SaaS Application Architecture: Microservices, APIs, and REST  The Web’s Client–Server Architecture --  SaaS Communication Uses HTTP Routes -- CHIPS  HTTP and URIs -- From Web Sites to Microservices  Service-Oriented Architecture -- RESTful APIs  Everything is a Resource -- RESTful URIs, API Calls, and JSON -- CHIPS  Create and Deploy a Simple SaaS App;

#+begin_comment
Text book 1 , chapter 2,3
#+end_comment

{{{unit}}}
| UNIT III | MVC FRAMEWORK AND MOBILE SERVICE | 9 |
SaaS Framework  Rails as a Model–View–Controller Framework : The Model–View–Controller (MVC) Architecture -- Rails Models Databases and Active Record -- CHIPS  Active Record Basics -- Routes, Controllers, and Views -- CHIPS Rails Routes -- Forms -- CHIPS Hangperson on Rails -- Debugging  When Things Go Wrong -- CHIPS  Hello Rails; Mobile and Desktop SaaS Clients  JavaScript   Introduction  : JavaScript  The Big Picture -- Introducing ECMA Script -- Classes, Functions and Constructors  -- The Document Object Model (DOM) and jQuery -- The DOM and Accessibility -- Events and Callbacks -- AJAX  Asynchronous JavaScript And XML  --  Testing JavaScript and AJAX -- CHIPS  AJAX Enhancements to RottenPotatoes -- Single-Page Apps and JSON APIs;

#+begin_comment
Text book 1 , chapter 4,6
#+end_comment

{{{unit}}}
| UNIT IV | REQUIREMENT AND TESTING | 9 |
Requirements: BDD and User Stories : Behavior-Driven Design and User -- SMART User Stories -- Lo-Fi User Interface Sketches and Storyboards --  Points and Velocity -- Agile Cost Estimation -- Cucumber: From User Stories to Acceptance Tests -- CHIPS: Intro to BDD and Cucumber -- Explicit vs. Implicit and Imperative vs. Declarative Scenarios -- The Plan-And-Document Perspective on Documentation; Test-Driven Development : FIRST, TDD, and Red–Green–Refactor --Anatomy of a Test Case  Arrange, Act, Assert --Isolating Code: Doubles and Seams -- Stubbing the Internet -- CHIPS  Intro to RSpec on Rails -- Fixtures and Factories -- Coverage Concepts and Types of Tests -- Other Testing Approaches and -- CHIPS  The Acceptance Test/Unit Test Cycle --The Plan-And-Document Perspective on Testing;

#+begin_comment
Text book 1 , chapter 7,8 
#+end_comment


{{{unit}}}
| UNIT V | AGILE AND DEVOPS | 9 |
Agile Teams : It Takes a Team: Two-Pizza and Scrum --  Using Branches Effectively -- Pull Requests and Code Reviews -- Delivering the Backlog Using Continuous Integration -- CHIPS: Agile Iterations -- Reporting and Fixing Bugs: The Five R’s -- The Plan-And-Document Perspective on Managing Teams ; Dev/Ops -- From Development to Deployment --Three-Tier --Responsiveness, Service Level Objectives, and Apdex -- Releases and Feature Flags -- Monitoring and Finding Bottlenecks --Improving Rendering and Database Performance With Caching -- Avoiding Abusive Database Queries -- CHIPS  Exploiting Caching and Indices -- Security: Defending Customer Data in Your App -- The Plan-And-Document Perspective on Operations;

#+begin_comment
Text book 1 , chapter 10,12
#+end_comment


\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Demonstrate all the phases in software engineering  (K2)
- Compare the architecture to develop an application (k3)
- Choose the suitable framework do develop an application (k3) 
- Categorize the requirements and testing need of the software project (K3)
- Explain the procedure in agile and devops environment (k2)

 


** TEXT BOOKS
1. Armando Fox and David Patterson , Engineering Software as a Service: An Agile Approach Using Cloud Computing Second Edition, 2021
2. Roger S Pressman, Bruce R.Maxin ``Software Engineering -- A Practitioner's Approach'', McGraw-Hill International Edition, Eighth Edition, 2015.
3. Ian Sommerville, ``Software Engineering'', Pearson Education Asia,Tenth Edition, 2015.

** REFERENCES
1. Rajib Mall, ``Fundamentals of Software Engineering'', PHI Learning  Private Limited, Fifth Edition, 2015.
2. Pankaj Jalote, ``Software Engineering, A Precise Approach'', Wiley  India, 2010.
3. Kelkar S A,``Software Engineering'', Prentice Hall of India, 2007.
4. Stephen R Schach, ``Software Engineering'', Tata McGraw-Hill Publishing Company Limited,2007.
