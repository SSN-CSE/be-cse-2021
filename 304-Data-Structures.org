* 
:properties:
:author: Mr H Shahul Hamead and Ms M Saritha
:date: 09-03-2021
:end:
#+startup: showall
{{{title-tab}}}
| CODE    | COURSE TITLE    | L | T | P | E | C |
| UCS2302 | DATA STRUCTURES | 3 | 0 | 0 | 0 | 3 |

** R2021 CHANGES :noexport:
1. In Unit 2, Function call is added in the application of stack.
2. In Unit 5, External sorting is added.

** COURSE OBJECTIVES
- To comprehend the notion of linear and non linear data structures
- To apply the linear and non-linear data structures to various problems 
- To learn sorting and hashing techniques
- To design suitable data structures for different problems and implement them in C.

{{{unit}}}
| UNIT I | LINEAR DATA STRUCTURES - LIST | 10 |
Algorithm Analysis: Running time calculations; Abstract Data Types
(ADTs); List ADT: Array implementation of lists -- Linked lists --
Circular linked lists -- Doubly linked lists -- Applications of Lists:
Polynomial manipulation.

{{{unit}}}
| UNIT II | LINEAR DATA STRUCTURES – STACKS AND QUEUES | 7 |
Stack ADT: Stack model -- Implementation of stacks -- Applications:
Balancing symbols -- Infix to postfix conversion -- Evaluating postfix
expressions -- Function calls; Queue ADT: Queue model -- Array
implementation of queues -- Applications of queues.

{{{unit}}}
| UNIT III | NON LINEAR DATA STRUCTURES – TREES | 10 |
Preliminaries; Binary trees: Expression trees; Binary search tree ADT;
AVL trees; Tree traversals; B-Trees; Priority Queues: Binary heap.

{{{unit}}}
| UNIT IV | NON LINEAR DATA STRUCTURES – GRAPHS | 9 |
Graph Algorithms: Definitions -- Representation of graphs; Graph
Traversals: Breadth-first traversal -- Depth-first traversal;
Topological sort -- Shortest-Path Algorithms: Dijkstra's algorithm --
All-pairs shortest path.

{{{unit}}}
| UNIT V | SORTING AND HASHING TECHNIQUES | 9 |
Sorting: Insertion sort -- Shell sort -- External sorting; Hashing:
Hash function -- Separate chaining -- Open addressing -- Rehashing --
Extendible hashing.

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to
1. Analyze the different types of list and their operations with
   suitable applications (K4)
2. Develop applications using stacks and queues (K3)
3. Apply the operations of unbalanced and balanced trees to develop
   solutions to various problems (K3)
4. Develop applications using traversal and shortest path algorithms
   of graph (K3)
5. Choose suitable sorting and hashing algorithms to solve various
   computing problems (K3).
   
      
** TEXT BOOKS
1. M A Weiss, ``Data Structures and Algorithm Analysis in C'', 2nd
   Edition, Pearson Education, 2002.
2. Richard F Gilberg, Behrouz A Forouzan, ``Data Structures: A
   Pseudocode Approach with C'', 2nd Edition, Cengage India, 2007.

** REFERENCES
1. A V Aho, J E Hopcroft, J D Ullman, ``Data Structures and
   Algorithms'', Pearson Education, 1st Edition Reprint, 2003.
2. R F Gilberg, B A Forouzan, ``Data Structures'', 2nd Edition,
   Thomson India Edition, 2005.
3. Ellis Horowitz, Sartaj Sahni, Susan Anderson-Freed, ``Fundamentals
   of Data Structures in C'', 2nd Edition, University Press, 2008.
4. S Sridhar, ``Design and Analysis of Algorithms``, 1st Edition,
   Oxford University Press, 2014.
5. Byron Gottfried, Jitender Chhabra, ``Programming with C`` (Schaum’s
   Outlines Series), 3rd Edition, Mcgraw Hill Higher Education, 2010.

** CO TO PO/PSO MAPPING

| PO/PSO | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 1 | 2 | 3 |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| CO1    | 2 | 3 | 3 | 2 | 0 | 0 | 0 | 0 | 0 |  1 |  0 |  1 | 2 | 1 | 0 |
| CO2    | 2 | 3 | 3 | 1 | 0 | 0 | 0 | 0 | 0 |  1 |  0 |  1 | 2 | 1 | 0 |
| CO3    | 2 | 3 | 3 | 2 | 0 | 0 | 0 | 0 | 1 |  1 |  0 |  1 | 2 | 1 | 0 |
| CO4    | 2 | 3 | 3 | 2 | 0 | 0 | 0 | 0 | 1 |  1 |  0 |  1 | 2 | 1 | 0 |
| CO5    | 2 | 3 | 2 | 2 | 0 | 0 | 0 | 0 | 1 |  1 |  0 |  1 | 2 | 1 | 0 |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| Course | 2 | 3 | 3 | 2 | 0 | 0 | 0 | 0 | 1 |  1 |  0 |  1 | 2 | 1 | 0 |

# | Score | 10 | 15 | 14 | 9 | 0 | 0 | 0 | 0 | 3 | 5 | 0 | 5 | 10 | 5 | 0 |
