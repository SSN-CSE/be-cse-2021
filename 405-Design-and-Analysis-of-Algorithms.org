* <<<405>>> DESIGN AND ANALYSIS OF ALGORITHMS
:properties:
:author: Dr.S.Kavitha and Mr.V.Balasubramanian
:date: 12-03-2021
:end:

#+startup: showall
** CO PO PSO MAPPING :noexport:
#+NAME: co-po-pso mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
| CO1            | K3 |   2 |   2 |   1 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    1 |    0 |    0 |
| CO2            | K4 |   3 |   3 |   2 |   3 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    0 |    0 |
| CO3            | K4 |   3 |   3 |   3 |   2 |   3 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    2 |    0 |    2 |
| CO4            | K4 |   3 |   3 |   2 |   3 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    1 |    0 |    2 |
| CO5            | K2 |   3 |   3 |   1 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    0 |    1 |    0 |    0 |
| CO6            | K6 |   3 |   2 |   2 |   3 |   3 |   0 |   0 |   0 |   3 |    1 |    0 |    0 |    2 |    0 |    2 |

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 2 | 4 |

** COURSE OBJECTIVES
- Learn the algorithm analysis techniques
- Analyze the asymptotic performance of algorithms.
- Understand the conceppt of different algorithm design techniques
- Understand the limitations of algorithmic power.
- Demonstrate the familiarity with important algorithms and data structures.


{{{unit}}}
|UNIT I|INTRODUCTION AND ANALYSIS |10| 
Introduction: Fundamentals of algorithmic Problem solving -- Important
problem types; Fundamentals of the Analysis of Algorithm Efficiency:
Analysis framework -- Asymptotic notations and basic efficiency
classes -- Mathematical analysis for recursive and non-recursive
algorithms.

{{{unit}}}
|UNIT II|BRUTE FORCE AND DIVIDE AND CONQUER |8| 
Brute Force: String matching -- Closest-pair problem; 
Exhaustive search: Traveling salesman problem -- Knapsack problem.
Divide and Conquer: Mergesort -- Quicksort -- Multiplication of large
integers and Strassen's matrix multiplication.

{{{unit}}}
|UNIT III |DYNAMIC PROGRAMMING AND GREEDY TECHNIQUE |9| 
Dynamic Programming: Computing a binomial coefficient -- Knapsack
problem and memory functions -- Warshall's and Floyd's algorithm --
Greedy Technique: Prim's algorithm -- Kruskal's algorithm --
Dijkstra's algorithm.

{{{unit}}}
|UNIT IV | ITERATIVE IMPROVEMENT AND BACKTRACKING |9| 
Iterative Improvement: The simplex method -- Maximum matching in
bipartite graphs; Backtracking: N-queens problem -- Hamiltonian
circuit problem.

{{{unit}}}
| UNIT V | LIMITATIONS OF ALGORITHM POWER | 9 |
Branch and Bound: Knapsack problem -- Traveling salesman problem;
Limitations of algorithm power: Lower-bound arguments -- P, NP and
NP-complete problems; Coping with the Limitations of Algorithm Power:
Approximation algorithms for NP-Hard problems -- Traveling salesman
problem -- Knapsack problem.

 *Theory Periods: 45*

** SUGGESTIVE EXPERIMENTS
1. Implementation of non-recursive and recursive algothms for the given
   problem
2. Implementation of string matching using Brute Force technique
3. Implementation of Knapsack problem using Exhaustive Search
   technique
4. Implementation of merge sort and quick sort using Divide and
   Conquer technique
5. Implementation of Knapsack Problem using Dynamic Programming
6. Implementation of Prim's and Dijkstra's algorithms.
8. Implementation of n-Queens problem using Backtracking technique
9. Implementation of Knapsack using Branch and Bound technique
10. Mini project

 *Practical Periods: 30*

 *Total Periods: 75*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Develop the analysis Asymptotic framework for various computing problems (K3)
- Analyze the time and space complexity of Divide and Conquer algorithm strategy and compare with na√Øve approach (K4)
- Distinguish the importance of Dynamic Programming and Greedy Technique (K4)
- Identify suitable algorithm design technique for optimization problems (K4)
- Understand the limitations of algorithmic power (K2).
- Design and implement important algorithms with appropriate data structures (K6)


** TEXT BOOKS
1. Anany Levitin, ``Introduction to the Design and Analysis of
   Algorithms'', 3rd Edition, Pearson Education, 2012.
2. S Dasgupta, C H Papadimitriou, U V Vazirani,
   ``Algorithms'',1st Edition,  McGraw Hill Education, 2017.

** REFERENCES
1. Thomas H Cormen, Charles E Leiserson, Ronald L Rivest, Clifford
   Stein, ``Introduction to Algorithms'', 3rd Edition, PHI Learning
   Private Limited, 2012.
2. Steven S Skiena, ``The Algorithm Design Manual'', 2nd Edition,
   Springer, 2008.

