* 
:properties:
:author: Dr S Kavitha, Dr V Balasubramanian, Dr R S Milton
:date: 29-03-2021
:end:

#+startup: showall
{{{title-tab}}}
| CODE    | COURSE TITLE                      | L | T | P | E | C |
| UCS2403 | DESIGN AND ANALYSIS OF ALGORITHMS | 3 | 0 | 2 | 0 | 4 |

#+begin_comment
** R2021 CHANGES :noexport:
1. Brute force dropped
2. Reordered topics
   1. Divide-and-conquer
   2. Backtracking
   3. Dynamic programming
   4. Greedy
   5. Iterative improvement
3. Under iterative improvement: Simplex dropped; Stable matching and
   Maximum network flow added.
4. Under DP: Ordering in matrix multiplication added
5. Suggested programs slightly changed
6. Jeff Erickson added as a textbook. Dasgupta book moved to
   reference.
7. Modified the co-po mapping on 11.3.2022
#+end_comment

# +tblfm: @>$3..@>$>='(ceiling (/ (* 1.0 (apply '+ '(@<<..@>>)))(length '(@<<..@>>))));N

** COURSE OBJECTIVES
- To learn algorithms analysis techniques.
- To analyze the asymptotic performance of algorithms.
- To apply different algorithm design strategies.
- To prove the limitations of algorithmic power.
- To demonstrate the familiarity with important algorithms and data structures.

{{{unit}}}
| UNIT I | INTRODUCTION AND ANALYSIS | 9 |
Introduction: Fundamentals of algorithmic problem solving -- Important
problem types; Fundamentals of the Analysis of Algorithm Efficiency:
Analysis framework -- Asymptotic notations and basic efficiency
classes -- Mathematical analysis for recursive and non-recursive
algorithms.

{{{unit}}}
| UNIT II | DIVIDE-AND-CONQUER, BACKTRACKING | 9 |
Divide and Conquer: Mergesort -- Quicksort -- Multiplication of large
integers -- Strassen's matrix multiplication; Backtracking: Subset sum
-- N-queens problem -- Hamiltonian circuit problem.

{{{unit}}}
| UNIT III | DYNAMIC PROGRAMMING, GREEDY | 9 |
Dynamic Programming: Computing a binomial coefficient -- Knapsack
problem and memory functions -- Ordering of matrix multiplications --
Warshall's and Floyd's algorithm; Greedy Technique: Dijkstra's
algorithm, Prim's algorithm -- Kruskal's algorithm.

{{{unit}}}
|UNIT IV | ITERATIVE IMPROVEMENT, BRANCH-AND-BOUND |9| 
Iterative Improvement: Stable matching -- Maximum Network Flow --
Maximum matching in bipartite graphs; Branch and Bound: Knapsack
problem -- Traveling salesman problem.

{{{unit}}}
| UNIT V | LIMITATIONS OF ALGORITHM POWER | 9 |
Limitations of algorithm power: Lower-bound arguments -- P, NP and
NP-complete problems; Coping with the Limitations of Algorithm Power:
Approximation algorithms for NP-Hard problems -- Traveling salesman
problem -- Knapsack problem.

\hfill *Theory Periods: 45*

** SUGGESTIVE EXPERIMENTS
1. Iterative and recursive algorithms using decrease-and-conquer
2. Backtracking: subset sum, N-queeens
3. Divide-and-conquer: Mergesort, Quicksort 
4. Dynamic Programming: Longest Increasing Subsequence, Floyd-Warshall
5. Greedy: Prim's, Dijkstra's
6. Iterative improvement: Stable matching, Network flow
7. Branch and Bound: Knapsack

\hfill *Practical Periods: 30*

\hfill *Total Periods: 75*

** COURSE OUTCOMES
After the completion of this course, students will be able to 
1. Analyze asymptotic running time for various kinds of algorithms (K4)
2. Analyze the time and space complexity of Divide-and-Conquer and  Backtracking algorithms (K4)
3. Evaluate Dynamic Programming and Greedy techniques for a given problem (K5)
4. Use iterative improvement and branch-and-bound design techniques (K5)
5. Explain the concepts of NP completeness (K2)


** TEXT BOOKS
1. Anany Levitin, ``Introduction to the Design and Analysis of
   Algorithms'', 3rd Edition, Pearson Education, 2012.
2. Jeff Erickson, ``Algorithms'', 1st Edition, 2019,
   https://jeffe.cs.illinois.edu/teaching/algorithms/

** REFERENCES
1. S Dasgupta, C H Papadimitriou, U V Vazirani,
   ``Algorithms'',1st Edition,  McGraw Hill Education, 2017.
2. Thomas H Cormen, Charles E Leiserson, Ronald L Rivest, Clifford
   Stein, ``Introduction to Algorithms'', 3rd Edition, PHI Learning
   Private Limited, 2012.
3. Steven S Skiena, ``The Algorithm Design Manual'', 2nd Edition,
   Springer, 2008.


** CO TO PO/PSO MAPPING
| PO/PSO | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 1 | 2 | 3 |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| CO1    |  3 |  2 |   |   |   |   |   |   |   |    |    |   | 2 |   |   |
| CO2    |  3 |  2 | 2 |   |   |   |   |   |   |    |    |   | 3 |   |   |
| CO3    |  3 |  2 | 2 |   |   |   |   |   |   |    |    |   | 3 |   |   |
| CO4    |  3 |  2 | 2 |   |   |   |   |   |   | 3  |    | 3 | 3 |   |   |
| CO5    |  3 |  2 |   |   |   |   |   |   |   |    |    |   | 2 |   |   |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| Total  | 15 | 10 | 6 |   |   |   |   |   |  |  3 |    |  3 | 13 |   |   |
| Score  | 3  | 2  | 2 |   |   |   |   |   |  |  3 |    |  3 |  3 |   |   | 
 
