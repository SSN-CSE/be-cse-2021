
* R2021 Changes
- String handling included
- Hybrid Inheritance Dropped
- User defined algorithms changed to Collection algorithms


* <<<305>>> OBJECT ORIENTED PROGRAMMING
:properties:
:author: Dr. B. Prabavathy and Dr. B. Bharathi
:date: 09-03-2021
:end: 

#+startup: showall
#+begin_comment
- 1. The contents of units 3, 4 and 5 of this syllabus have been changed when compared to Anna University R-2017. Comments have been added along with the units
- 2. The same course is not offered in P.G. Hence, there is no requirement for comparison of this syllabus with PG syllabus
- 3. Five course outcomes are specified and are aligned with the units
- 4. Suggestive experiments have not been specified in this syllabus as it is not an integrated course. There is seperate lab course available
#+end_comment

{{{credits}}}
| L | T | P | C |
| 3 | 0 | 0 | 3 |

** CO PO MAPPING :noexport:
#+NAME: co-po-mapping
|                |    | PO1 | PO2 | PO3 | PO4 | PO5 | PO6 | PO7 | PO8 | PO9 | PO10 | PO11 | PO12 | PSO1 | PSO2 | PSO3 |
|                |    |  K3 |  K4 |  K5 |  K5 |  K6 |   - |   - |   - |   - |    - |    - |    - |   K5 |   K3 |   K6 |
| CO1            | K3 |   2 |   3 |   3 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    3 |    3 |    0 |    0 |
| CO2            | K3 |   2 |   3 |   3 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    3 |    3 |    0 |    0 |
| CO3            | K3 |   2 |   3 |   3 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    3 |    3 |    0 |    0 |
| CO4            | K3 |   2 |   3 |   3 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    3 |    3 |    0 |    0 |
| CO5            | K3 |   2 |   3 |   3 |   0 |   0 |   0 |   0 |   0 |   0 |    0 |    0 |    3 |    3 |    0 |    0 |
| CO6            | K5 |   2 |   3 |   3 |   3 |   2 |   0 |   0 |   1 |   3 |    3 |    1 |    3 |    3 |    3 |    1 |
| Score          |    |  12 |  18 |  18 |   3 |   2 |   0 |   0 |   1 |   3 |    3 |    0 |   18 |   18 |    3 |    1 |
| Course Mapping |    |   2 |   3 |   3 |   1 |   0 |   0 |   0 |   0 |   1 |    1 |    0 |    3 |    3 |    1 |    0 |

** COURSE OBJECTIVES
- To learn the basics of Object Oriented Programming 
- To know the principles of inheritance and polymorphism
- To learn the concepts of generic methods and  generic collections.

{{{unit}}}
| UNIT I | INTRODUCTION | 10 |
Principles of OOP: Classes -- Objects -- Data hiding -- Data
encapsulation -- Inheritance -- Polymorphism; Definition of Classes:
Objects -- Methods -- Access specifiers -- Static and final classes
and members; Object Construction and Destruction -- Fundamental
programming structures in Java; Streams: Input--Output, String handling -- Examples in
Java.

#+begin_comment
Retain 
      Introduction to the OO concepts and fundamental programming structures in Java 
Inclusion
      I/O streams
09.03.2021
CCC Feedback Committee Considerations
Inclusion:  String handling
Retain: Stream Input Output, Idea is to teach various streams to be used for input and output     
#+end_comment

{{{unit}}}
| UNIT II | INHERITANCE 	 | 10 |
Inheritance: Definition -- Types of inheritance: Single -- Multilevel
-- Multiple -- Hierarchical; Subclass constructors --
Interfaces in Java: Definition -- Implementation -- Extending
interfaces -- Inheritance versus delegation -- Inheritance rules --
Inner classes -- Examples in Java.

#+begin_comment
Retain 
      Introduction to the OO concepts and fundamental programming structures in Java 
Inclusion
      I/O streams
09.03.2021
CCC Feedback Committee Considerations
Deletion:  Hybrid Inheritance
Retain: Delegation Concept, Need to be taught without event handling    
#+end_comment

{{{unit}}}
| UNIT III | POLYMORPHISM AND EXCEPTION HANDLING	 | 7 |
Polymorphism: Method overloading and overriding -- Dynamic method
dispatch; Exceptions: Hierarchy -- Built-in exceptions -- Creating own
exception; Packages in Java -- Examples in Java.

#+begin_comment
Retain
	Exception handling
Inclusion
	Basic concepts of polymorphism and exception handling
Removal
	Since I/O streams (AU R-2017) have been studied in Unit I, it is removed
#+end_comment

{{{unit}}}
| UNIT IV | GENERIC TYPES AND METHODS	 | 9 |
Definition and concepts: Generic classes and generic methods --
Generic types -- Restrictions and limitations -- Inheritance rules for
generic types -- Reflections -- Examples in Java.

#+begin_comment
Retain
	Generic Programming 
Removal 
	Since, multithreading (AU R-2017) is specific to programming language, it is removed 
#+end_comment

{{{unit}}}
| UNIT V | GENERIC COLLECTIONS FOR ADTS AND ALGORITHMS	 | 9 |
Introduction to collections -- Collection Classes and Interfaces:
Array list -- Linked list -- Queue -- Set -- Trees; Iterators for
collections -- Map class -- Collection algorithms: Sorting -- Searching --
User-defined algorithms -- Examples in Java.

#+begin_comment
Removal
	Since event-driven programming (AU R-2017) is specific to programming language, it is removed 
Inclusion
	Generic collections have been included
09.03.2021
CCC Feedback Committee Considerations
Change:  Algorithms: Sorting– Searching – User defined algorithms changed to Collection algorithms: Sorting and Searching
#+end_comment

\hfill *Total Periods: 45*

** COURSE OUTCOMES
After the completion of this course, students will be able to: 
- Make use of classes and objects for problem solving (K3)
- Develop programs using inheritance and interfaces (K3)
- Apply the concepts of polymorphism and exception handling (K3)
- Build applications using generic programming (K3)
- Apply the concepts of generic collections  (K3).
- Solve real world problems in teams by choosing suitable object oriented features and  applying best practices in programming  with a clear documentation  of algorithm and approach(K5).
#+begin_comment

09.03.2021
CCC Feedback Committee Considerations
CO's have been reframed based on the latest action words suggested

25.3.2021
RK changed KL of CO6 and CO6's mapping to PO/PSO
#+end_comment
     
** TEXT BOOKS
1. Danny Poo, Derek Kiong, Swarnalatha Ashok, ``Object-Oriented
   Programming and Java'', 2nd Edition, Springer Publication, 2008.
2. Herbert Schildt, ``Java: The Complete Reference'', 8th Edition,
   McGraw Hill Education, 2011.


** REFERENCES
1. Timothy Budd, ``Understanding Object-oriented programming with
   Java'', Updated Edition, Pearson Education, 2000.
2. C Thomas Wu, ``An introduction to Object-oriented programming with
   Java'', 4th Edition, Tata McGraw-Hill Publishing company
   Ltd., 2006.
3. Cay S Horstmann, Gary cornell, ``Core Java Volume –I
   Fundamentals'', 9th Edition, Prentice Hall, 2013.
4. Paul Deitel, Harvey Deitel, ``Java SE 8 for programmers'', 3rd
   Edition, Pearson, 2015.
5. Steven Holzner, ``Java 2 Black book'', Dreamtech press, 2011.
