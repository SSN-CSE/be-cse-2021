*  
:properties:
:author: Mr. H. Shahul Hamead and Ms. M. Saritha 
:date: 09-03-2021 
:end:

#+startup: showall
{{{title-tab}}}
| CODE    | COURSE TITLE        | L | T | P | E | C |
| UCS2312 | DATA STRUCTURES LAB | 0 | 0 | 4 | 0 | 2 |


** REVISION 2021                                                   :noexport:
1. Array implementation of list ADT and construction of expression tree are removed.
2. Mini project has been included.

** COURSE OBJECTIVES
- Develop program solutions for various problems
- Apply suitable data structures, linear and non linear for a given problem statement
- Design the data structure for the given problem and implement them in a high level programming language.

** SUGGESTIVE EXPERIMENTS
1. Represent polynomial expression as linked list and write functions for polynomial manipulation
2. Implement doubly linked list ADT (e.g Insert, delete, search, merge, reverse operations)
3. Implementation of Stack ADT (e.g Balancing parenthesis, infix to postfix conversion, evaluation of postfix expression)
4. Implementation of Queue ADT (e.g Simulating printer jobs)
5. Implement binary search tree and produce its pre-order, in-order, and post-order traversals
6. Implement AVL trees (e.g Implement dictionary)  
7. Implement priority queue using binary heaps (e.g Storing employee records based upon salary)
8. Graph representation and implement graph traversal algorithms 
9. Implement Dijkstra's algorithm using graph (e.g Find the shortest route to connect one city to another)
10. Implement any two sorting algorithms 
11. Implement hashing using separate chaining technique 
12. Mini Project

\hfill *Total Periods: 60*

** COURSE OUTCOMES
After the completion of this course, students will be able to 
1. Solve the applications using linear and non linear data structures applying best practices in   
          programming (K3)
2. Apply searching, sorting, and hashing techniques to solve the given problems (K3)
3. Choose suitable data structure and solve the given problem (K5)



** LABORATORY REQUIREMENT FOR BATCH OF 25 STUDENTS
Hardware:
1. Standalone Systems - 25 Nos 
Software:
1. C / C++ Compiler 
      
** CO TO PO/PSO MAPPING
| PO/PSO | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 1 | 2 | 3 |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| CO1    | 3 | 2 | 2 | 3 |  |  |  |  |  |  |  |   | 2 | 2 |  |
| CO2    | 3 | 2 | 2 | 3 |  |  |  |  |  |  |  |   | 2 | 2 |  |
| CO3    | 3 | 3 | 3 | 3 |  |  |  |  |  |  |  |   | 2 | 2 |  |
|--------+---+---+---+---+---+---+---+---+---+----+----+----+---+---+---|
| Course | 3 | 3| 3 | 3 |  |  |  |  |  |   |   |   | 2 | 2 |  |

# | Score  | 10 | 15 | 12 | 7 | 0 | 0 | 0 | 2 | 3 | 15 |  0 |  5 | 12 | 7 | 1 |
